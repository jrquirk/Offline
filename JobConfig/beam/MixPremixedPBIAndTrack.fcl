#
#  This script mixes primary events with pre-mixed background frames produced including proton bunch intensity variations.
#  It also reconstructs tracks, and performs a standard track analysis, correctly including the event weight.
#  Only single-frame mixing is physically meaningful, as combining background frames will implicitly change the proton
#  intensity distribution.
#  Downstream analysis modules must weight by the event weight produced by ProtonBunchIntensitySimulator to get physically
#  meaningful results, as the probability of producing the primary event is (in general) proportional to the proton intensity.
#  David Brown, 20 May 2015
#
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "TrkDiag/fcl/KalDiag.fcl"

process_name : MixPremixedPBIAndTrack

source :
{
  module_type : RootInput
}

services :
{
  message : @local::default_message
  TFileService : { fileName : "MixPremixedPBIAndTrack.root" }
  RandomNumberGenerator: { }
  GeometryService        : { inputFile : "Mu2eG4/geom/geom_common.txt" }
  ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
  BTrkHelper : @local::BTrkHelperDefault
  SeedService: @local::automaticSeeds
}

physics :
{
# declare standard modules
  producers :
  {
    @table::EventMixing.producers
    @table::Tracking.producers
  }

  filters :
  {
    @table::EventMixing.filters
  }
# declare some standard analyzers
  analyzers :
  {
# count generated events
      genCountLogger: { module_type: GenEventCountReader }
# read Kalman fit DeM tracks
      RKFDeM: {
         module_type: ReadKalFits
	 fitterModuleLabel: TRFDeM
	 KalDiag : @local::KalDiagReadCD3 # configure KalDiag to read CD3 data files
# Weight track analysis by the proton intensity
	 eventWeightModules : [ protonBunchSummarizer  ]
	 beamWeightModule : protonBunchSummarizer
	 diagLevel : 1 # track-level diagnostics.  For detailed (hit-level) diagnostics use diagLevel : 2
      }
   }
# trigger path, including mixing and track reconstruction
  p1 : [
	@sequence::EventMixing.CD3Mixers,
	@sequence::EventMixing.TimeMaps,
	@sequence::Tracking.DigiSim,
	@sequence::Tracking.TPRDeM
       ] 

# end path, including standard track analysis
  e1 : [RKFDeM, genCountLogger ]
  
  trigger_paths  : [p1]
  end_paths      : [e1]
}

# specify the time offset maps when building straw digis
physics.producers.makeSD.TimeOffsets.inputs : [ "protonTimeMap", "muonTimeMap" ] 
# specify background frame files: these must be define outside this script, before it is included
physics.filters.flashMixer.fileNames : @local::bgHitFiles
physics.filters.ootMixer.fileNames : @local::bgHitFiles
physics.filters.dioMixer.fileNames : @local::bgHitFiles
physics.filters.neutronMixer.fileNames : @local::bgHitFiles
physics.filters.photonMixer.fileNames : @local::bgHitFiles
physics.filters.protonMixer.fileNames : @local::bgHitFiles
physics.filters.deuteronMixer.fileNames : @local::bgHitFiles
